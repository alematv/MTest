// <auto-generated />
using System;
using MTest.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MTest.Migrations
{
    [DbContext(typeof(MAppContext))]
    [Migration("20191205140928_search_query_time_taken")]
    partial class search_query_time_taken
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MTest.Models.Search.SearchQueryResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EngineName")
                        .IsRequired();

                    b.Property<string>("Query")
                        .IsRequired();

                    b.Property<long>("Time");

                    b.Property<DateTime?>("TimeTaken")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Query");

                    b.ToTable("search_queries");
                });

            modelBuilder.Entity("MTest.Models.Search.SearchResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Link")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("Position");

                    b.Property<int>("SearchQueryResultId");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("SearchQueryResultId");

                    b.ToTable("search_results");
                });

            modelBuilder.Entity("MTest.Models.Search.SearchResult", b =>
                {
                    b.HasOne("MTest.Models.Search.SearchQueryResult", "SearchQueryResult")
                        .WithMany("Results")
                        .HasForeignKey("SearchQueryResultId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
